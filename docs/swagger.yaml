basePath: /
definitions:
  models.User:
    properties:
      id:
        type: string
      location:
        type: string
      name:
        type: string
      title:
        type: string
    required:
    - location
    - name
    - title
    type: object
  responses.UserResponse:
    properties:
      data:
        additionalProperties: true
        type: object
      message:
        type: string
      status:
        type: integer
    type: object
host: localhost:6060
info:
  contact:
    email: support@swagger.io
    name: Joshua Ong
    url: http://www.swagger.io/support
  description: This is a MongoDB-based Users API server
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Golang Mux Mongo Users API
  version: "1.0"
paths:
  /user:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully create a new user
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                message:
                  type: string
                status:
                  type: integer
              type: object
        "400":
          description: There is an issue with the request body
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                message:
                  type: string
                status:
                  type: integer
              type: object
        "500":
          description: Fail to create a new user
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                message:
                  type: string
                status:
                  type: integer
              type: object
  /user/{userId}:
    get:
      description: Get a user by userID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully get a user by their ID
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                message:
                  type: string
                status:
                  type: integer
              type: object
        "400":
          description: user ID is not provided
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                message:
                  type: string
                status:
                  type: integer
              type: object
        "404":
          description: A user with the specified ID could not be found
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                message:
                  type: string
                status:
                  type: integer
              type: object
    put:
      consumes:
      - application/json
      description: Update a user's information by userID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully update a user
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                message:
                  type: string
                status:
                  type: integer
              type: object
        "400":
          description: user ID is not provided or request body is improperly formatted
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                message:
                  type: string
                status:
                  type: integer
              type: object
        "404":
          description: A user with the specified ID could not be found
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                message:
                  type: string
                status:
                  type: integer
              type: object
        "500":
          description: Fail to update a user's information
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                message:
                  type: string
                status:
                  type: integer
              type: object
  /user/{userId}/:
    delete:
      description: Update a user's information by userID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully delete a user
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                message:
                  type: string
                status:
                  type: integer
              type: object
        "400":
          description: user ID is not provided
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                message:
                  type: string
                status:
                  type: integer
              type: object
        "404":
          description: A user with the specified ID could not be found
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                message:
                  type: string
                status:
                  type: integer
              type: object
        "500":
          description: Fail to delete a user
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                message:
                  type: string
                status:
                  type: integer
              type: object
  /users/:
    delete:
      description: Delete all users from the database
      produces:
      - application/json
      responses:
        "200":
          description: Successfully delete all users
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                message:
                  type: string
                status:
                  type: integer
              type: object
        "500":
          description: Fail to delete all users
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                message:
                  type: string
                status:
                  type: integer
              type: object
    get:
      description: Retrieve all users from the database
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieve all users
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                message:
                  type: string
                status:
                  type: integer
              type: object
        "500":
          description: Fail to retrieve all users
          schema:
            allOf:
            - $ref: '#/definitions/responses.UserResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                message:
                  type: string
                status:
                  type: integer
              type: object
schemes:
- http
swagger: "2.0"
